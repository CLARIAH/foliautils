Usage: FoLiA-stats [options] file/dir

FoLiA-stats will produce ngram statistics for a FoLiA file, 
or a whole directory of FoLiA files 
The output will be a 2 or 4 columned tab separated file, extension: *tsv 
	 (4 columns when -p is specified)
	--clip='factor'		 clipping factor. 
		(entries with frequency <= 'factor' will be ignored). 
	-p	 output percentages too. 
	--lower	 Lowercase all words
	--separator='sep' 	connect all n-grams with 'sep' (default is a space)
	--underscore	 Obsolete. Equals to --separator='_'
	--languages	 Lan1,Lan2,Lan3. (default='Lan1').
		 languages that are not assigned to Lan1,Lan2,... are counted as Lan1
		 If Lan1='skip' all languages not mentioned as Lan2,... are ignored.
		 If Lan1='all' all detected languages are counted.
	--lang='lan' (default='none').
		 This is a shorthand for --languages=skip,lan.
		 The value 'none' (the default) means: accept all languages.
		 Meaning: only count words from 'lan' ignoring all other languages.
	--ngram='count'		 construct n-grams of length 'count'
	--max-ngram='max'	 construct ALL n-grams upto a length of 'max'
		 If --ngram='min' is specified too, ALL n-grams from 'min' upto 'max' are created
	--mode='mode' Special actions:
		 'string_in_doc' Collect ALL <str> nodes from the document and handle them as one long Sentence.
		 'lemma_pos' When processsing nodes, also collect lemma and POS tag information. THIS implies --tags=s
	--tags='tags' collect text from all nodes in the list 'tags'
	-s	 equal to --tags=p
	-S	 equal to --mode=string_in_doc
	--class='name'	 When processing <str> nodes, use 'name' as the folia class for <t> nodes.
		 (default is 'current')
	--hemp=<file>	 Create a historical emphasis file. 
		 (words consisting of single, space separated letters)
	-t	 number_of_threads
	-h or --help	 this message
	-v or --verbose	 very verbose output.
	-V or --version	 show version 
	-e	 expr: specify the expression all input files should match with.
	-o	 name of the output file(s) prefix.
	-R	 search the dirs recursively (when appropriate).
FoLiA-stats from foliautils 0.8
Usage: FoLiA-stats [options] file/dir

FoLiA-stats will produce ngram statistics for a FoLiA file, 
or a whole directory of FoLiA files 
The output will be a 2 or 4 columned tab separated file, extension: *tsv 
	 (4 columns when -p is specified)
	--clip='factor'		 clipping factor. 
		(entries with frequency <= 'factor' will be ignored). 
	-p	 output percentages too. 
	--lower	 Lowercase all words
	--separator='sep' 	connect all n-grams with 'sep' (default is a space)
	--underscore	 Obsolete. Equals to --separator='_'
	--languages	 Lan1,Lan2,Lan3. (default='Lan1').
		 languages that are not assigned to Lan1,Lan2,... are counted as Lan1
		 If Lan1='skip' all languages not mentioned as Lan2,... are ignored.
		 If Lan1='all' all detected languages are counted.
	--lang='lan' (default='none').
		 This is a shorthand for --languages=skip,lan.
		 The value 'none' (the default) means: accept all languages.
		 Meaning: only count words from 'lan' ignoring all other languages.
	--ngram='count'		 construct n-grams of length 'count'
	--max-ngram='max'	 construct ALL n-grams upto a length of 'max'
		 If --ngram='min' is specified too, ALL n-grams from 'min' upto 'max' are created
	--mode='mode' Special actions:
		 'string_in_doc' Collect ALL <str> nodes from the document and handle them as one long Sentence.
		 'lemma_pos' When processsing nodes, also collect lemma and POS tag information. THIS implies --tags=s
	--tags='tags' collect text from all nodes in the list 'tags'
	-s	 equal to --tags=p
	-S	 equal to --mode=string_in_doc
	--class='name'	 When processing <str> nodes, use 'name' as the folia class for <t> nodes.
		 (default is 'current')
	--hemp=<file>	 Create a historical emphasis file. 
		 (words consisting of single, space separated letters)
	-t	 number_of_threads
	-h or --help	 this message
	-v or --verbose	 very verbose output.
	-V or --version	 show version 
	-e	 expr: specify the expression all input files should match with.
	-o	 name of the output file(s) prefix.
	-R	 search the dirs recursively (when appropriate).
start processing of 2 files 
Processed :data/frog.xml with 11 n-grams, 11 lemmas, and 11 POS tags. still 1 files to go.
Processed :data/frog2.xml with 11 n-grams, 11 lemmas, and 11 POS tags. still 0 files to go.
done processsing directory ''
start calculating the results
in total 22 n-grams were found.in 2 FoLiA documents.
created WordFreq list 'stats8.wordfreqlist.tsv' for 1-grams. Stored 22 tokens and 8 types, TTR= 0.363636
created LemmaFreq list 'stats8.lemmafreqlist.tsv' for 1-gram lemmas. Stored 22 tokens and 7 types. TTR= 0.318182
created LemmaPosFreq list 'stats8.lemmaposfreqlist.tsv' for 1-gram Lemma-Pos pairs. Stored 22 tokens and 7 types. TTR= 0.318182
